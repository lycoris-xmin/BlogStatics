$(function(){async function n(){s.commentPanel.show("文章评论加载中...");try{const n=$.createHttpRequest();n.url="/post/comment/list",n.data={postId:window.lycoris.post.id,pageIndex:o.pageIndex,pageSize:o.pageSize};const a=await n.get();if(a&&0==a.resCode){if(o.count=a.data.count,o.maxPageIndex=$.getMaxPageIndex(a.data.count,o.pageSize),a.data.list&&a.data.list.length){let n="";for(let e of a.data.list)n+=t(e);s.commentList.html(n)}s.commentTotal.text(a.data.count),e(o.pageIndex)}}finally{s.commentPanel.hide()}}function t(n){const t=n.user.avatar.startsWith("mdi")?`<span class="mdi ${n.user.avatar}" data-id="${n.user.id}"></span> `:`<img src="${n.user.avatar}" onerror="javascript:this.src='/statics/avatar/${n.isOwner?"default_admin":"default_user"}.jpg'" data-id="${n.user.id}"/>`;return`\n        <li class="comment-item">\n          <div class="flex-between-center">\n            <div class="user">\n                <div class="flex-center-center">\n                    <div class="avatar">\n                      ${t}\n                    </div>\n                    <div>\n                        <p class="name">${n.user.nickName}${n.isOwner?'<span class="owner">博主</span>':""}</p>\n                        <small class="time">${n.createTime}</small>\n                    </div>\n                </div>\n            </div>\n\n            <div>\n                <span>\n                    <i class="mdi mdi-map-marker-radius"></i>\n                </span>\n                <span class="address">${n.ipAddress}</span>\n                <img class="client" src="/statics/icon/browser/edge.png" />\n            </div>\n          </div>\n          <div class="content">\n            <p>${n.content}</p>\n          </div>\n        </li>\n        `}function e(n){if(o.count>0&&o.maxPageIndex>1){n=n||1;const t=$.getPageNumber(n,o.maxPageIndex);let e="";e='\n    <li class="page-item page-btn" data-index="-1">\n      <span class="page-link">上一页</span>\n    </li>\n    ';for(let n of t)e+=`\n      <li class="page-item page-number ${n==o.pageIndex?"active":""}" data-index="${n}">\n        <span class="page-link">${n}</span>\n      </li>\n      `;e+='\n    <li class="page-item page-btn" data-index="1">\n      <span class="page-link">下一页</span>\n    </li>\n    ',s.pagination.html(e),a()}}function a(){s.pagination.find(">li.page-number").on("click",async function(){const t=$(this).data("index");o.pageIndex!=t&&(o.pageIndex=t,o.maxPageIndex>o.maxPageNumber?e($(this).data("index")):(s.pagination.find(">li.page-number").removeClass("active"),$(this).addClass("active")),await n())}),s.pagination.find(">li.page-btn").on("click",function(){const n=parseInt($(this).data("index"));let t=o.pageIndex+n;t<1||t>o.maxPageIndex||s.pagination.find(`>li.page-number[data-index="${t}"]`).trigger("click")})}const i=$("div.post-comment"),s={textarea:i.find('textarea[name="comment"]'),login:i.find("button.login"),publish:i.find("button.publish"),commentPanel:i.find("div.comment-list-panel").lineBusy(),commentTotal:i.find("p.comment-total").find("span"),commentList:i.find("ul.comment-list"),pagination:$("div.pagination-btn").find("ul.pagination")},o={count:0,pageIndex:1,pageSize:5,maxPageIndex:0};s.textarea.on("input",function(){const n=$(this).val()||"",t=$(this).next(),e=n.length;t.find("span").text(e),e>=100?t.hasClass("max")||t.addClass("max"):t.hasClass("max")&&t.removeClass("max")}),s.login.on("click",function(){window.lycoris.route.toLoginPage()}),s.publish.on("click",async function(){let e={postId:window.lycoris.post.id,content:$('textarea[name="comment"]').val(),commentId:0,repliedUserId:0};if(e.content=e.content.trim(),e.content){$(this).setBusy();try{const a=$.createHttpRequest();a.url="/post/Comment/Publish",a.data=e;const i=await a.post();if(i&&0==i.resCode){if(window.lycoris.totast.success("发布成功"),1==o.pageIndex){const n=t(i.data);s.commentList.prepend(n);const e=$("li.comment-item");e.length>o.pageSize&&$(e[e.length-1]).remove(),o.count++,s.commentTotal.text(o.count)}else n();$('textarea[name="comment"]').val("")}}finally{$(this).clearBusy()}}}),this.init=function(){const t=document.querySelector(".post-comment.card.card-border");if(t){const e={root:null,rootMargin:"0px",threshold:.1},a=new IntersectionObserver(function(t,e){t.forEach(t=>{t.isIntersecting&&(e.unobserve(t.target),n())})},e);a.observe(t)}},this.init()});