let initBodyCaller;const sprintf=function(t){const o=arguments;let e=!0,i=1;return t=t.replace(/%s/g,()=>{var t=o[i++];return void 0===t?(e=!1,""):t}),e?t:""},groupBy=(t,e)=>{const i={};return t.forEach(t=>{var o=e(t);i[o]=i[o]||[],i[o].push(t)}),i},Utils=($.extend($.fn.bootstrapTable.defaults,{groupBy:!1,groupByField:"",groupByFormatter:void 0}),$.fn.bootstrapTable.utils),BootstrapTable=$.fn.bootstrapTable.Constructor,_initSort=BootstrapTable.prototype.initSort,_initBody=BootstrapTable.prototype.initBody,_updateSelected=BootstrapTable.prototype.updateSelected;BootstrapTable.prototype.initSort=function(...t){_initSort.apply(this,Array.prototype.slice.apply(t));if(this.tableGroups=[],this.options.groupBy&&""!==this.options.groupByField){this.options.sortName!==this.options.groupByField&&(this.options.customSort?Utils.calculateObjectValue(this.options,this.options.customSort,[this.options.sortName,this.options.sortOrder,this.data]):this.data.sort((e,i)=>{var t=this.getGroupByFields();const r=[],s=[];return $.each(t,(t,o)=>{r.push(e[o]),s.push(i[o])}),e=r.join(),i=s.join(),e.localeCompare(i,void 0,{numeric:!0})}));t=groupBy(this.data,e=>{var t=this.getGroupByFields();const i=[];return $.each(t,(t,o)=>{i.push(e[o])}),i.join(", ")});let e=0;$.each(t,(t,o)=>{this.tableGroups.push({id:e,name:t,data:o}),o.forEach(t=>{t._data||(t._data={}),t._data["parent-index"]=e}),e++})}},BootstrapTable.prototype.initBody=function(...t){if(initBodyCaller=!0,_initBody.apply(this,Array.prototype.slice.apply(t)),this.options.groupBy&&""!==this.options.groupByField){const s=this;let i=!1,r=0;this.columns.forEach(t=>{t.checkbox?i=!0:t.visible&&(r+=1)}),this.options.detailView&&!this.options.cardView&&(r+=1),this.tableGroups.forEach(t=>{var o=[];o.push(sprintf('<tr class="info groupBy expanded" data-group-index="%s">',t.id)),s.options.detailView&&!s.options.cardView&&o.push('<td class="detail"></td>'),i&&o.push('<td class="bs-checkbox">','<input name="btSelectGroup" type="checkbox" />',"</td>");let e=t.name;"function"==typeof s.options.groupByFormatter&&(e=s.options.groupByFormatter(t.name,t.id,t.data)),o.push("<td",sprintf(' colspan="%s"',r),">",e,"</td>"),o.push("</tr>"),s.$body.find(`tr[data-parent-index=${t.id}]:first`).before($(o.join("")))}),this.$selectGroup=[],this.$body.find('[name="btSelectGroup"]').each(function(){const t=$(this);s.$selectGroup.push({group:t,item:s.$selectItem.filter(function(){return $(this).closest("tr").data("parent-index")===t.closest("tr").data("group-index")})})}),this.$container.off("click",".groupBy").on("click",".groupBy",function(){$(this).toggleClass("expanded"),s.$body.find(`tr[data-parent-index=${$(this).closest("tr").data("group-index")}]`).toggleClass("hidden")}),this.$container.off("click",'[name="btSelectGroup"]').on("click",'[name="btSelectGroup"]',function(t){t.stopImmediatePropagation();t=$(this).prop("checked");s[t?"checkGroup":"uncheckGroup"]($(this).closest("tr").data("group-index"))})}initBodyCaller=!1,this.updateSelected()},BootstrapTable.prototype.updateSelected=function(...t){initBodyCaller||(_updateSelected.apply(this,Array.prototype.slice.apply(t)),this.options.groupBy&&""!==this.options.groupByField&&this.$selectGroup.forEach(t=>{var o=t.item.filter(":enabled").length===t.item.filter(":enabled").filter(":checked").length;t.group.prop("checked",o)}))},BootstrapTable.prototype.checkGroup=function(t){this.checkGroup_(t,!0)},BootstrapTable.prototype.uncheckGroup=function(t){this.checkGroup_(t,!1)},BootstrapTable.prototype.checkGroup_=function(t,o){var e=this.getSelections(),i=(this.$selectItem.filter(function(){return $(this).closest("tr").data("parent-index")===t}).prop("checked",o),this.updateRows(),this.updateSelected(),this.getSelections());o?this.trigger("check-all",i,e):this.trigger("uncheck-all",i,e)},BootstrapTable.prototype.getGroupByFields=function(){let t=this.options.groupByField;return t=$.isArray(this.options.groupByField)?t:[this.options.groupByField]},$.BootstrapTable=class extends $.BootstrapTable{scrollTo(o){if(this.options.groupBy){let t={unit:"px",value:0};if("rows"===(t="object"==typeof o?Object.assign(t,o):t).unit){let e=0;return this.$body.find(`> tr:lt(${t.value})`).each((t,o)=>{e+=$(o).outerHeight(!0)}),this.$body.find(`> tr:not(.groupBy):eq(${t.value})`).prevAll(".groupBy").each((t,o)=>{e+=$(o).outerHeight(!0)}),void this.$tableBody.scrollTop(e)}}super.scrollTo(o)}};