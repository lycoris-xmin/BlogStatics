const Utils=$.fn.bootstrapTable.utils;function printPageBuilderDefault(t){return`
  <html>
  <head>
  <style type="text/css" media="print">
  @page {
    size: auto;
    margin: 25px 0 25px 0;
  }
  </style>
  <style type="text/css" media="all">
  table {
    border-collapse: collapse;
    font-size: 12px;
  }
  table, th, td {
    border: 1px solid grey;
  }
  th, td {
    text-align: center;
    vertical-align: middle;
  }
  p {
    font-weight: bold;
    margin-left:20px;
  }
  table {
    width:94%;
    margin-left:3%;
    margin-right:3%;
  }
  div.bs-table-print {
    text-align:center;
  }
  </style>
  </head>
  <title>Print Table</title>
  <body>
  <p>Printed on: ${new Date} </p>
  <div class="bs-table-print">${t}</div>
  </body>
  </html>`}$.extend($.fn.bootstrapTable.defaults,{showPrint:!1,printAsFilteredAndSortedOnUI:!0,printSortColumn:void 0,printSortOrder:"asc",printPageBuilder(t){return printPageBuilderDefault(t)}}),$.extend($.fn.bootstrapTable.COLUMN_DEFAULTS,{printFilter:void 0,printIgnore:!1,printFormatter:void 0}),$.extend($.fn.bootstrapTable.defaults.icons,{print:{bootstrap3:"glyphicon-print icon-share"}[$.fn.bootstrapTable.theme]||"fa-print"}),$.BootstrapTable=class extends $.BootstrapTable{initToolbar(...e){if(this.showToolbar=this.showToolbar||this.options.showPrint,super.initToolbar(...e),this.options.showPrint){e=this.$toolbar.find(">.columns");let t=e.find("button.bs-print");(t=t.length?t:$(`
        <button class="${this.constants.buttonsClass} bs-print" type="button">
        <i class="${this.options.iconsPrefix} ${this.options.icons.print}"></i>
        </button>`).appendTo(e)).off("click").on("click",()=>{this.doPrint(this.options.printAsFilteredAndSortedOnUI?this.getData():this.options.data.slice(0))})}}doPrint(t){const r=(t,e,i)=>{e=Utils.calculateObjectValue(i,i.printFormatter,[t[i.field],t,e],t[i.field]);return null==e?this.options.undefinedText:e};i=t,e=this.options.columns,o=e&&e[0]?e[0].filter(t=>t.printFilter).map(t=>({colName:t.field,value:t.printFilter})):[];var o,e=((i,t)=>{var o=[`<table dir="${this.$el.attr("dir")||"ltr"}"><thead>`];for(const e of t){o.push("<tr>");for(let t=0;t<e.length;t++)e[t].printIgnore||o.push(`<th
              ${Utils.sprintf(' rowspan="%s"',e[t].rowspan)}
              ${Utils.sprintf(' colspan="%s"',e[t].colspan)}
              >${e[t].title}</th>`);o.push("</tr>")}o.push("</thead><tbody>");for(let e=0;e<i.length;e++){o.push("<tr>");for(const n of t)for(let t=0;t<n.length;t++)!n[t].printIgnore&&n[t].field&&o.push("<td>",r(i[e],e,n[t]),"</td>");o.push("</tr>")}return o.push("</tbody></table>"),o.join("")})(t=((t,i,e)=>{if(!i)return t;let o="asc"!==e;return o=-(+o||-1),t.sort((t,e)=>o*t[i].localeCompare(e[i]))})(t=i.filter(t=>{var e=t,i=o;for(let t=0;t<i.length;++t)if(e[i[t].colName]!==i[t].value)return!1;return!0}),this.options.printSortColumn,this.options.printSortOrder),this.options.columns),i=window.open("");i.document.write(this.options.printPageBuilder.call(this,e)),i.document.close(),i.focus(),i.print(),i.close()}};