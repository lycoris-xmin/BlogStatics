$.akottr.dragtable.prototype._restoreState=function(e){for(var[t,o]of Object.entries(e)){t=this.originalTable.el.find(`th[data-field="${t}"]`);this.originalTable.startIndex=t.prevAll().length+1,this.originalTable.endIndex=parseInt(o,10)+1,this._bubbleCols()}};const filterFn=()=>{Array.prototype.filter||(Array.prototype.filter=function(t){if(null==this)throw new TypeError;var o=Object(this),r=o.length>>>0;if("function"!=typeof t)throw new TypeError;var s,i=[],l=2<=arguments.length?arguments[1]:void 0;for(let e=0;e<r;e++)e in o&&(s=o[e],t.call(l,s,e,o))&&i.push(s);return i})};$.extend($.fn.bootstrapTable.defaults,{reorderableColumns:!1,maxMovingRows:10,onReorderColumn(e){return!1},dragaccept:null}),$.extend($.fn.bootstrapTable.Constructor.EVENTS,{"reorder-column.bs.table":"onReorderColumn"}),$.fn.bootstrapTable.methods.push("orderColumns"),$.BootstrapTable=class extends $.BootstrapTable{initHeader(...e){super.initHeader(...e),this.options.reorderableColumns&&this.makeRowsReorderable()}_toggleColumn(...e){super._toggleColumn(...e),this.options.reorderableColumns&&this.makeRowsReorderable()}toggleView(...e){super.toggleView(...e),this.options.reorderableColumns&&!this.options.cardView&&this.makeRowsReorderable()}resetView(...e){super.resetView(...e),this.options.reorderableColumns&&this.makeRowsReorderable()}makeRowsReorderable(e=null){try{$(this.$el).dragtable("destroy")}catch(e){}$(this.$el).dragtable({maxMovingRows:this.options.maxMovingRows,dragaccept:this.options.dragaccept,clickDelay:200,dragHandle:".th-inner",restoreState:e||this.columnsSortOrder,beforeStop:e=>{const o={},t=(e.el.find("th").each((e,t)=>{o[$(t).data("field")]=e}),this.columnsSortOrder=o,this.options.cookie&&this.persistReorderColumnsState(this),[]),r=[];var s,i=[];const l=[];if(this.$header.find("th:not(.detail)").each(function(e){t.push($(this).data("field")),r.push($(this).data("formatter"))}),t.length<this.columns.length)for(var n=this.columns.filter(e=>!e.visible),a=0;a<n.length;a++)t.push(n[a].field),r.push(n[a].formatter);for(let e=0;e<t.length;e++)-1!==(s=this.fieldsColumnsIndex[t[e]])&&(this.fieldsColumnsIndex[t[e]]=e,this.columns[s].fieldIndex=e,i.push(this.columns[s]));this.columns=i,filterFn(),$.each(this.columns,(e,t)=>{let o=!1;const r=t.field;this.options.columns[0].filter(e=>!(!o&&e.field===r&&(l.push(e),o=!0)))}),this.options.columns[0]=l,this.header.fields=t,this.header.formatters=r,this.initHeader(),this.initToolbar(),this.initSearchText(),this.initBody(),this.resetView(),this.trigger("reorder-column",t)}})}orderColumns(e){this.columnsSortOrder=e,this.makeRowsReorderable()}};