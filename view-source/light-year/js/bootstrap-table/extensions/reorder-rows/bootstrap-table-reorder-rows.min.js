const rowAttr=(o,t)=>({id:"customId_"+t});$.extend($.fn.bootstrapTable.defaults,{reorderableRows:!1,onDragStyle:null,onDropStyle:null,onDragClass:"reorder_rows_onDragClass",dragHandle:">tbody>tr>td",useRowAttrFunc:!1,onReorderRowsDrag(o){return!1},onReorderRowsDrop(o){return!1},onReorderRow(o){return!1}}),$.extend($.fn.bootstrapTable.Constructor.EVENTS,{"reorder-row.bs.table":"onReorderRow"}),$.BootstrapTable=class extends $.BootstrapTable{init(...o){if(this.options.reorderableRows){this.options.useRowAttrFunc&&(this.options.rowAttributes=rowAttr);const t=this.options.onPostBody;this.options.onPostBody=()=>{setTimeout(()=>{this.makeRowsReorderable(),t.call(this.options,this.options.data)},1)}}super.init(...o)}makeRowsReorderable(){this.$el.tableDnD({onDragStyle:this.options.onDragStyle,onDropStyle:this.options.onDropStyle,onDragClass:this.options.onDragClass,onDragStart:(o,t)=>this.onDropStart(o,t),onDrop:(o,t)=>this.onDrop(o,t),dragHandle:this.options.dragHandle})}onDropStart(o,t){this.$draggingTd=$(t).css("cursor","move"),this.draggingIndex=$(this.$draggingTd.parent()).data("index"),this.options.onReorderRowsDrag(this.data[this.draggingIndex])}onDrop(t){this.$draggingTd.css("cursor","");var r=[];for(let o=0;o<t.tBodies[0].rows.length;o++){var s=$(t.tBodies[0].rows[o]);r.push(this.data[s.data("index")]),s.data("index",o)}var o=this.data[this.draggingIndex],e=r.indexOf(this.data[this.draggingIndex]),a=this.data[e],e=this.options.data.indexOf(this.data[e]);this.options.data.splice(this.options.data.indexOf(o),1),this.options.data.splice(e,0,o),this.options.onReorderRowsDrop(a),this.trigger("reorder-row",r)}};