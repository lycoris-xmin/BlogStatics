const isInit=t=>void 0!==t.$el.data("resizableColumns"),initResizable=t=>{!t.options.resizable||t.options.cardView||isInit(t)||t.$el.resizableColumns({store:window.store})},destroy=t=>{isInit(t)&&t.$el.data("resizableColumns").destroy()},reInitResizable=t=>{destroy(t),initResizable(t)},BootstrapTable=($.extend($.fn.bootstrapTable.defaults,{resizable:!1}),$.fn.bootstrapTable.Constructor),_initBody=BootstrapTable.prototype.initBody,_toggleView=BootstrapTable.prototype.toggleView,_resetView=BootstrapTable.prototype.resetView;BootstrapTable.prototype.initBody=function(...t){const e=this;_initBody.apply(this,Array.prototype.slice.apply(t)),e.$el.off("column-switch.bs.table page-change.bs.table").on("column-switch.bs.table page-change.bs.table",()=>{reInitResizable(e)})},BootstrapTable.prototype.toggleView=function(...t){_toggleView.apply(this,Array.prototype.slice.apply(t)),this.options.resizable&&this.options.cardView&&destroy(this)},BootstrapTable.prototype.resetView=function(...t){const e=this;_resetView.apply(this,Array.prototype.slice.apply(t)),this.options.resizable&&setTimeout(()=>{initResizable(e)},100)};